# -*- coding: utf-8 -*-
"""SHAP

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n6VVM-CVAbroPYam9qYw4V5QxgsJVeLR
"""

!pip install shap

import shap
import numpy as np
import pandas as pd

import lime
from lime import lime_tabular
from lime import submodular_pick

from xgboost import XGBClassifier
from sklearn.metrics import accuracy_score
from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
bc = load_breast_cancer()
X = bc.data
Y = bc.target
features = bc.feature_names

df = pd.DataFrame(X, columns=features)
df['Target'] = Y
df.head()

df.info()

df.shape

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.30, random_state=42)

model = XGBClassifier(n_estimators = 300, random_state = 123)
model.fit(X_train, Y_train)

Y_pred = model.predict(X_test)

accuracy = accuracy_score(Y_test, Y_pred) 
print("Accuracy: %.2f%%" % (accuracy * 100.0))

explainer = shap.TreeExplainer(model) 

shap_values = explainer.shap_values(X)

expected_value = explainer.expected_value

shap.summary_plot(shap_values, X,title="SHAP summary plot")

shap.summary_plot(shap_values, X,plot_type="bar")

shap.plots._waterfall.waterfall_legacy(expected_value, shap_values[79], features=X[79,:], feature_names=features, max_display=15, show=True)

